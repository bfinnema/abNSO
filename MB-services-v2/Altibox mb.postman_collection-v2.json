{
	"info": {
		"_postman_id": "60d379ce-a5e9-41b7-805a-244aea02eaa7",
		"name": "Altibox mb",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5324268"
	},
	"item": [
		{
			"name": "POST a CSR device to the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"metroDevice\": [\n        {\n            \"device_name\": \"iosxr2\",\n            \"hostname\": \"CSR2\",\n            \"device_type\": \"CSR\",\n            \"ipv4_mgmt_addr\": \"172.18.2.1\",\n            \"isis_interface_name\": \"TenGigE\",\n            \"isis_interface_number\": \"0/0/0/21\",\n            \"ipv4_addr\": \"10.2.2.11\",\n            \"ipv4_mask\": \"255.255.255.0\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:metroDevices",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:metroDevices"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST an ER device to the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"metroDevice\": [\n        {\n            \"device_name\": \"iosxr0\",\n            \"hostname\": \"ER1\",\n            \"device_type\": \"ER\",\n            \"ipv4_mgmt_addr\": \"172.17.7.1\",\n            \"isis_interface_name\": \"TenGigE\",\n            \"isis_interface_number\": \"0/0/0/2\",\n            \"ipv4_addr\": \"10.0.0.10\",\n            \"ipv4_mask\": \"255.255.255.0\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:metroDevices",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:metroDevices"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all CSR devices from the mb inventory",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:metroDevices",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:metroDevices"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST an ACL to the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"access_list\": [\n        {\n            \"acl_name\": \"MPLS_LOOPBACKS\",\n            \"sequence\": [\n                {\n                    \"sequence_number\": 10,\n                    \"permit_or_deny\": \"permit\",\n                    \"protocol\": \"ipv4\",\n                    \"ipv4_addr\": \"10.161.0.0\",\n                    \"prefix-length\": 16\n                },\n                {\n                    \"sequence_number\": 20,\n                    \"permit_or_deny\": \"permit\",\n                    \"protocol\": \"ipv4\",\n                    \"ipv4_addr\": \"213.167.115.0\",\n                    \"prefix-length\": 24\n                },\n                {\n                    \"sequence_number\": 30,\n                    \"permit_or_deny\": \"permit\",\n                    \"protocol\": \"ipv4\",\n                    \"ipv4_addr\": \"77.110.255.0\",\n                    \"prefix-length\": 24\n                }\n            ]\n        }\n    ]\n}\n"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:access_lists",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:access_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all ACLs from the mb inventory",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:access_lists",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:access_lists"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST a metro3 area to the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"METRO3Area\": [\n        {\n            \"metro3_area\": \"ABN-METRO3\",\n            \"RR\": [\n                {\n                    \"RR_ipv4_addr\": \"192.168.7.4\"\n                },\n                {\n                    \"RR_ipv4_addr\": \"192.168.7.5\"\n                },\n                {\n                    \"RR_ipv4_addr\": \"192.168.7.6\"\n                }\n            ]\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:METRO3Areas",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:METRO3Areas"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all metro3 areas from the mb inventory",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:METRO3Areas",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:METRO3Areas"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST an ISIS instance to the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"ISISinstance\": [\n        {\n            \"instance\": \"METRO3\",\n            \"maxwait\": 5000,\n            \"max_lsp_lifetime\": 65535\n        }\n    ]\n}\n"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:ISISinstances",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:ISISinstances"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all ISIS instances from the mb inventory",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:ISISinstances",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:ISISinstances"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST a mb_infra_cfs instance with ISIS config for a device-group",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_infra_cfs:mb_infra_cfs\": [\n        {\n            \"name\": \"ISIS1\",\n            \"device_group_id\": \"acme-group\",\n            \"isis_config\": {\n                \"do_isis_config\": true,\n                \"isis_instance\": \"METRO3\"\n            }\n        }\n    ]\n}\n"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST a mb_infra_cfs instance with MPLS config for device-group",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_infra_cfs:mb_infra_cfs\": [\n        {\n            \"name\": \"MPLS1\",\n            \"device_group_id\": \"csr-group\",\n            \"ldp_config\": {\n                \"do_ldp_config\": true,\n                \"address_family\": \"ipv4\",\n                \"acl_name\": \"MPLS_LOOPBACKS\",\n                \"mpls_interfaces\": {\n                    \"mpls_interface\": [\n                        {\n                            \"description\": \"MPLS and ISIS uplink interface\",\n                            \"mpls_interface_name\": \"TenGigE\",\n                            \"mpls_interface_number\": \"0/0/0/21\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST a mb_infra_cfs instance with MPLS config for a single device",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_infra_cfs:mb_infra_cfs\": [\n        {\n            \"name\": \"MPLS-ER\",\n            \"group\": \"Device\",\n            \"device\": \"iosxr0\",\n            \"ldp_config\": {\n                \"do_ldp_config\": true,\n                \"address_family\": \"ipv4\",\n                \"acl_name\": \"MPLS_LOOPBACKS\",\n                \"mpls_interfaces\": {\n                    \"mpls_interface\": [\n                        {\n                            \"description\": \"MPLS and ISIS interface to CSR\",\n                            \"mpls_interface_name\": \"TenGigE\",\n                            \"mpls_interface_number\": \"0/0/0/2\"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all mb_infra_cfs instances",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_infra_cfs:mb_infra_cfs",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_infra_cfs:mb_infra_cfs"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET one mb_infra_cfs instance",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_infra_cfs:mb_infra_cfs=MPLS1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_infra_cfs:mb_infra_cfs=MPLS1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST a mb_metro3_cfs instance to a device-group",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_metro3_cfs:mb_metro3_cfs\": [\n        {\n            \"name\": \"ABN-METRO3\",\n            \"device_group_id\": \"acme-group\",\n            \"m3_area\": \"ABN-METRO3\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all mb_metro3_cfs instances",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_metro3_cfs:mb_metro3_cfs",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_metro3_cfs:mb_metro3_cfs"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET one mb_metro3_cfs instance",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_metro3_cfs:mb_metro3_cfs=ABN-METRO3",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_metro3_cfs:mb_metro3_cfs=ABN-METRO3"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST a mb_l3vpn instance, ER to CSR",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_l3vpn:mb_l3vpn\": [\n        {\n            \"vrf_name\": \"MOBILE-V101\",\n            \"endpoint\": [\n                {\n                    \"id\": \"MV101-4235\",\n                    \"rd\": 12345678,\n                    \"vlan\": 101,\n                    \"csr\": {\n                        \"device\": \"iosxr1\",\n                        \"local\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/23\",\n                            \"ipv4_address\": \"192.168.45.1\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        },\n                        \"link\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/21\",\n                            \"ipv4_address\": \"10.10.10.11\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        }\n                    },\n                    \"er\": {\n                        \"device\": \"iosxr0\",\n                        \"link\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/2\",\n                            \"ipv4_address\": \"10.10.10.10\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH an additional endpoint to a mb_l3vpn instance, CSR (as ER) to CSR",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_l3vpn:mb_l3vpn\": [\n        {\n            \"vrf_name\": \"MOBILE-V101\",\n            \"endpoint\": [\n                {\n                    \"id\": \"MV101-9834\",\n                    \"rd\": 12345678,\n                    \"vlan\": 101,\n                    \"csr\": {\n                        \"device\": \"iosxr2\",\n                        \"local\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/23\",\n                            \"ipv4_address\": \"192.168.46.1\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        },\n                        \"link\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/21\",\n                            \"ipv4_address\": \"12.12.12.11\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        }\n                    },\n                    \"er\": {\n                        \"device\": \"iosxr1\",\n                        \"link\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/22\",\n                            \"ipv4_address\": \"12.12.12.10\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_l3vpn:mb_l3vpn=MOBILE-V101",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_l3vpn:mb_l3vpn=MOBILE-V101"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH remove an endpoint from a mb_l3vpn instance",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+xml"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<mb_l3vpn xmlns=\"http://example.com/mb_l3vpn\">\n    <vrf_name>MOBILE-V101</vrf_name>\n        <endpoint xmlns:nc=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\n                nc:operation=\"delete\">\n        <id>MV101-9834</id>\n    </endpoint>\n</mb_l3vpn>\n"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_l3vpn:mb_l3vpn=MOBILE-V101",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_l3vpn:mb_l3vpn=MOBILE-V101"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH an additional endpoint to a mb_l3vpn instance, ER to CSR",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"mb_l3vpn:mb_l3vpn\": [\n        {\n            \"vrf_name\": \"MOBILE-V101\",\n            \"endpoint\": [\n                {\n                    \"id\": \"MV101-9567\",\n                    \"rd\": 12345678,\n                    \"vlan\": 101,\n                    \"csr\": {\n                        \"device\": \"iosxr2\",\n                        \"local\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/23\",\n                            \"ipv4_address\": \"192.168.48.1\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        },\n                        \"link\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/21\",\n                            \"ipv4_address\": \"13.13.13.11\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        }\n                    },\n                    \"er\": {\n                        \"device\": \"iosxr0\",\n                        \"link\": {\n                            \"interface_name\": \"TenGigE\",\n                            \"interface_number\": \"0/0/0/3\",\n                            \"ipv4_address\": \"13.13.13.10\",\n                            \"ipv4_mask\": \"255.255.255.0\"\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_l3vpn:mb_l3vpn=MOBILE-V101",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_l3vpn:mb_l3vpn=MOBILE-V101"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET all mb_l3vpn instances",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_l3vpn:mb_l3vpn",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_l3vpn:mb_l3vpn"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET one mb_l3vpn instance",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_l3vpn:mb_l3vpn=MOBILE-V101-4235",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_l3vpn:mb_l3vpn=MOBILE-V101-4235"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE a device from the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:metroDevices/mb_core:metroDevice=iosxr2",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:metroDevices",
						"mb_core:metroDevice=iosxr2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE an ACL from the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:access_lists/mb_core:access_list=MPLS_LOOPBACKS",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:access_lists",
						"mb_core:access_list=MPLS_LOOPBACKS"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE a metro3 area from the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:METRO3Areas/mb_core:METRO3Area=ABN-METRO3",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:METRO3Areas",
						"mb_core:METRO3Area=ABN-METRO3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE an ISIS instance from the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:ISISinstances/mb_core:ISISinstance=METRO3",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:ISISinstances",
						"mb_core:ISISinstance=METRO3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE a mb_infra_cfs instance",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_infra_cfs:mb_infra_cfs=MPLS1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_infra_cfs:mb_infra_cfs=MPLS1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE a mb_metro3_cfs instance",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_metro3_cfs:mb_metro3_cfs=ABN-METRO3",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_metro3_cfs:mb_metro3_cfs=ABN-METRO3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE a mb_l3vpn instance",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_l3vpn:mb_l3vpn=MOBILE-V101",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_l3vpn:mb_l3vpn=MOBILE-V101"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH a CSR device to the mb inventory",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+json"
					},
					{
						"key": "Cache-Control",
						"type": "text",
						"value": "no-cache"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/yang-data+json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"metroDevice\": [\n        {\n            \"device_name\": \"iosxr1\",\n            \"hostname\": \"CSR1\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/mb_core:mb/mb_core:mb_inventory/mb_core:metroDevices/mb_core:metroDevice=iosxr1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"mb_core:mb",
						"mb_core:mb_inventory",
						"mb_core:metroDevices",
						"mb_core:metroDevice=iosxr1"
					]
				}
			},
			"response": []
		},
		{
			"name": "RC POST XR Device",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/yang-data+xml"
					},
					{
						"key": "Accept",
						"value": "application/yang-data+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<device>\n <name>er1</name>\n <address>127.0.0.1</address>\n <port>12025</port>\n <authgroup>default</authgroup>\n <device-type>\n   <cli>\n     <ned-id xmlns:cisco-iosxr-nc-7.7=\"http://tail-f.com/ns/ned-id/cisco-iosxr-nc-7.7\">cisco-iosxr-nc-7.7:cisco-iosxr-nc-7.7</ned-id>\n   </cli>\n </device-type>\n <state>\n   <admin-state>unlocked</admin-state>\n </state>\n</device>\n"
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/tailf-ncs:devices",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"tailf-ncs:devices"
					]
				}
			},
			"response": []
		},
		{
			"name": "RC SSH Fetch-Host-Keys Device",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/yang-data+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/tailf-ncs:devices/device=er1/ssh/fetch-host-keys",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"tailf-ncs:devices",
						"device=er1",
						"ssh",
						"fetch-host-keys"
					]
				}
			},
			"response": []
		},
		{
			"name": "RC Sync-from Device",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/yang-data+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{host}}:8080/restconf/data/tailf-ncs:devices/device=er1/sync-from",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "8080",
					"path": [
						"restconf",
						"data",
						"tailf-ncs:devices",
						"device=er1",
						"sync-from"
					]
				}
			},
			"response": []
		}
	]
}